{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gjaischool1\\\\Desktop\\\\REACT-MASTER\\\\bonlunchbox_exam\\\\src\\\\page\\\\GoodsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport GoodsItem from \"../components/GoodsItem\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoodsList = ({\n  goods,\n  setGoods\n}) => {\n  _s();\n  //1.axios를 이용하여 상품정보를 가진 URL로 요청한 후, 응답받은 데이터를\n  //상품리스트 state에 저장하는 getGoodsList함수를 구현하시오.\n  //URL: http://localhost:3004/goods_list\n  // console.log(\"!23\");\n  const getGoodList = async () => {\n    try {\n      let res = await axios.get(\"http://localhost:3004/goods_list\");\n      setGoods(res.data);\n      console.log(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getGoodList();\n  }, []);\n  //2.useEffect() 를 이용하여 getGoodsList함수를 한 번만 호출하시오.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goods-list\",\n    children: goods.map(item => {\n      /*#__PURE__*/_jsxDEV(GoodsItem, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GoodsList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GoodsList;\nexport default GoodsList;\nvar _c;\n$RefreshReg$(_c, \"GoodsList\");","map":{"version":3,"names":["React","useEffect","GoodsItem","axios","jsxDEV","_jsxDEV","GoodsList","goods","setGoods","_s","getGoodList","res","get","data","console","log","err","className","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gjaischool1/Desktop/REACT-MASTER/bonlunchbox_exam/src/page/GoodsList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport GoodsItem from \"../components/GoodsItem\";\nimport axios from \"axios\";\n\nconst GoodsList = ({ goods, setGoods }) => {\n  //1.axios를 이용하여 상품정보를 가진 URL로 요청한 후, 응답받은 데이터를\n  //상품리스트 state에 저장하는 getGoodsList함수를 구현하시오.\n  //URL: http://localhost:3004/goods_list\n  // console.log(\"!23\");\n  const getGoodList = async () => {\n    try {\n      let res = await axios.get(\"http://localhost:3004/goods_list\");\n      setGoods(res.data);\n      console.log(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getGoodList();\n  }, []);\n  //2.useEffect() 를 이용하여 getGoodsList함수를 한 번만 호출하시오.\n\n  return (\n    <div className=\"goods-list\">\n      {/* 3.상품리스트 안에 있는 정보를 GoodsItem 컴포넌트를 활용해 출력하시오. */}\n      {goods.map((item) => {\n        <GoodsItem key={item.id} item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default GoodsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;MAC7DJ,QAAQ,CAACG,GAAG,CAACE,IAAI,CAAC;MAClBC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAClB;EACF,CAAC;EACDf,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACEL,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,EAExBX,KAAK,CAACY,GAAG,CAAEC,IAAI,IAAK;MACnB,aAAAf,OAAA,CAACH,SAAS;QAAekB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC;IACzC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3BIH,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}